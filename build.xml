<?xml version="1.0"?>
<!-- ********************************************************* -->
<!-- ** pihmalawi Module                                     ** -->
<!-- **	                                                    ** -->
<!-- ** @author Partners In Health                          ** -->
<!-- ** @version 1.0                                        ** -->
<!-- ********************************************************* -->
<project name="pihmalawi" default="package-module">
		
	<property environment="env"/>
	
	<property name="module.home" value="/usr/share/openmrs/modules"/>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="../openmrs-1.5.x/lib/ant-contrib/ant-contrib-1.0b2.jar"/>
	
	<available file="${env.OPENMRS_BUILD_PROPERTIES_FILE}" property="env.file.exists"/>
	<available file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties" property="appdata.file.exists"/>
	<available file="${user.home}/.OpenMRS/OPENMRS-build.properties" property="unix.file.exists"/>
	<if>
		<equals arg1="${env.file.exists}" arg2="true" />
		<then><property file="${env.OPENMRS_BUILD_PROPERTIES_FILE}"/></then>
		<elseif>
			<equals arg1="${appdata.file.exists}" arg2="true" />
			<then><property file="${user.home}/Application Data/OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<elseif>
			<equals arg1="${unix.file.exists}" arg2="true" />
			<then><property file="${user.home}/.OpenMRS/OPENMRS-build.properties"/></then>
		</elseif>
		<else><echo message="WARNING: No build properties found"/></else>
	</if>
	
	<property name="test.dir" value="./test" />
	<property name="junit-tests.dir" value="./junit-test" />

	   <path id="test.classpath">
	        <path refid="classpath"/>
	        <fileset dir="dist" includes="*.jar" />
	   			<fileset dir="build-ant/" includes="**/*.class"/>
	    <pathelement path="build-ant"/>
	    </path>

	<!-- *********************************************************** -->
	<!-- **                     TARGETS                           ** -->
	<!-- *********************************************************** -->
	<target name="init" description="initialization">
		<xmlcatalog id="common-dtds">
	        <dtd 
	            publicId="-//OpenMRS//DTD OpenMRS Config 1.0//EN"
	            location="lib-common/config-1.0.dtd"/>
	    </xmlcatalog>
		
		<xmlproperty file="metadata/config.xml" >
			<xmlcatalog refid="common-dtds"/>
		</xmlproperty>
		
		<xmlproperty file="metadata/config.xml" />

		<filterset id="variables.to.replace">
			<filter token="MODULE_ID" value="${module.id}" />
			<filter token="MODULE_NAME" value="${module.name}" />
			<filter token="MODULE_VERSION" value="${module.version}" />
			<filter token="MODULE_PACKAGE" value="${module.package}" />
		</filterset>
		
		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="lib-common">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="../openmrs-1.5.x/lib">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="../openmrs-1.5.x/dist">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="../reporting/dist">
				<include name="**/*.omod"/>
			</fileset>
			<fileset dir="../reporting/lib-common">
				<include name="**/*.jar"/>
			</fileset>
		</path>

	</target>

	<target name="clean" description="Delete build and dist directories">
		<delete dir="dist" />
		<delete dir="build-ant" />
	</target>

	<target name="compile-module" depends="init, clean" description="Compiles the module">
		<mkdir dir="build-ant" />
		
		<!-- Copy other source data to the build folder -->
		<copy todir="build-ant">
			<fileset dir="src/" excludes="**/*.java" />
		</copy>
		
		<copy todir="build-ant">
			<fileset dir="web/module/resources" includes="**/*.xml" />
		</copy>
		
		<!--  Compile module java files -->
		<javac destdir="build-ant" classpathref="classpath" debug="true" debuglevel="lines,source,vars">
			<compilerarg line="-g" />
			<compilerarg line="-target 1.5" />
			<src path="src/" />
			<include name="**/*.java" />
		</javac>
		
		<!--  Compile module web java files -->
		<javac destdir="build-ant" classpathref="classpath" debug="true" debuglevel="lines,source,vars">
			<compilerarg line="-g" />
			<compilerarg line="-target 1.5" />
			<src path="web/src/" />
			<include name="**/*.java" />
		</javac>
		
	</target>
	
	<target name="package-module" depends="compile-module" description="Packages module into jar file">
		<mkdir dir="dist" />
		
		<!-- Copy module metadata -->
		<copy todir="build-ant/">
			<fileset dir="metadata/" includes="**/*" excludes="messages*.properties" />
			<filterset refid="variables.to.replace" />
		</copy>
		
		<copy todir="build-ant/">
			<fileset dir="metadata/" includes="messages*.properties" />
		</copy>
		
		<!-- Copy module web data --> 
        <copy todir="build-ant/web/module/"> 
        		<fileset dir="web/module/" includes="**/*" excludes="resources/**/*" />
                <filterset refid="variables.to.replace" /> 
        </copy>  
             
            <!-- Copy the /web/resources folder separately so that image files are not corrupted -->  
        <copy todir="build-ant/web/module/"> 
                <fileset dir="web/module/" includes="resources/**/*" /> 
   		</copy> 
		
		<!-- Copy lib folder -->
		<!-- (lib should only contain this module's required -->
		<!-- libraries that OpenMRS doesn't contain already) -->
		<copy todir="build-ant/lib" failonerror="false">
			<fileset dir="lib" includes="**/*" />
		</copy>
		
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.omod">
			<fileset dir="build-ant" includes="**/*" />
		</jar>
	</target>
	
	<target name="package-jar" depends="package-module" description="Packages class files into jar file to be included in other projects">
		<!-- Create distributable jar file -->
		<jar destfile="dist/${module.id}-${module.version}.jar">
			<fileset dir="build-ant" >
				<exclude name="web/**/*" />
				<exclude name="test/**/*" />
			</fileset>
		</jar>
	</target>
	
	<target name="deploy-omod" depends="package-module" description="Deploy omod">
		<copy todir="${module.home}/">
			<fileset dir="dist" includes="*.omod" />
		</copy>
	</target>

	<target name="deploy-web" description="web">
		<copy todir="${module.home}/">
			<fileset dir="dist" includes="*.omod" />
		</copy>
	</target>

	<target name="compile-tests" depends="package-jar" description="compile the java files in /test">
		<mkdir dir="build-ant" />
		<javac srcdir="${test.dir}" destdir="build-ant" classpathref="test.classpath">
		</javac>
	</target>

	<target name="junit-report" depends="compile-tests" description="Run tests and create JUnit report (requires driver.jar property)">
		<delete dir="${junit-tests.dir}" failonerror="false"/>
		<mkdir dir="${junit-tests.dir}" />
		
		<!-- fork the vm so that translation happens faster -->
        <junit fork="yes" forkmode="once" clonevm="false">
        	<classpath refid="test.classpath"/>
        	<formatter type="xml"/>

        	<!-- overwrite this system property so that there are less properties printed -->
        	<sysproperty key="repositoryFileInput" value="" />
            <batchtest todir="${junit-tests.dir}" haltonfailure="no">
				<fileset dir="./build-ant">
					<include name="org/openmrs/**/ArtWeeklyVisitPersistentSetup.class" />
					<include name="org/openmrs/**/AbcTest.class" />
				</fileset>
			</batchtest>
		</junit>
		
	</target>

</project>
